<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        body {
            font-size: 3vmin;
        }

        .radio {
            border: 2px solid rgb(0, 0, 173);
            border-radius: 50%;
            width: 3vmin;
            height: 3vmin;
            margin-right: 1vmin;
        }

        .action {
            user-select: none;
            display: flex;
        }

        .selectedRadio {
            background-color: rgb(0, 0, 173);
            border-radius: 50%;
            width: 2vmin;
            height: 2vmin;
            margin: 0.5vmin;
        }

        .actions {
            color: rgb(0, 0, 173);
        }
    </style>
</head>

<body>
    <div id="app"></div>

    <script>
        const model = {
            selectedDate: '2020-05-13',
            actions: [
                { description: 'Vanne', isSelected: true },
                { description: 'Gjødsle' },
                { description: 'Beskjære' },
                { description: 'Potte om' },
                { description: 'Alt' },
            ],
            selected: {
                day: 13,
                month: 5,
                year: 2020
            }
        };

        // view
        updateView();
        function updateView() {
            document.getElementById('app').innerHTML = `
                <div class="date">
                    <h3>${displayDate(model.selectedDate)}</h3>
                </div>
                <div class="actions">
                    ${createActionsHtml()}
                </div>
            `;
        }

        function displayDate(dateIsoTxt) {
            return new Date(dateIsoTxt).toLocaleDateString();
        }

        function createActionsHtml() {
            const actions = model.actions;
            let html = '';
            for (let i = 0; i < actions.length; i++) {
                const action = actions[i];
                const actionHtml = !action.isSelected ? '' : `
                            <div class="selectedRadio">
                            </div>                            
                            `;
                html += `
                    <div class="action" onclick="selectAction(${i})">
                        <div class="radio">
                            ${actionHtml}
                        </div>
                        <div>
                            ${action.description}
                        </div>
                    </div>                    
                `;
            }
            return html;
        }

        // Controller 
        function selectAction(index) {
            const actions = model.actions;
            for (let action of actions) {
                action.isSelected = false;
            }
            actions[index].isSelected = true;
            updateView();
        }
    </script>
</body>

</html>
